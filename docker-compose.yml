version: '3'

services:
  # kafka-broker:
  #   image: kafka:2.3.0
  #   container_name: kafka-broker
  #   ports:
  #     - "2181:2181"
  #     - "9092:9092"
  #   networks:
  #     - net
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - net
    ports:
      - "2181:2181"
  kafka-broker:
    image: wurstmeister/kafka:2.12-2.3.1
    hostname: kafka-broker
    container_name: kafka-broker
    depends_on:
      - zookeeper
    environment:
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://172.0.0.2:9092
      # KAFKA_LISTENERS: INSIDE://172.0.0.2:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      # KAFKA_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOST_NAME: 172.0.0.2
      KAFKA_CREATE_TOPICS: "flight_delay_classification_request:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net
    ports:
      - "9092:9092"
  spark-master:
    image: bde2020/spark-master:2.4.0-hadoop2.7
    volumes:
      - .:/app/
    container_name: spark-master
    ports:
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - "constraint:node==<yourmasternode>"
  spark-worker-1:
    image: bde2020/spark-worker:2.4.0-hadoop2.7
    container_name: spark-worker-1
    volumes:
      - .:/app/
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==<yourworkernode>"
  spark-submit:
    depends_on: 
      - dockerflask
    # image: bde2020/spark-submit:2.4.0-hadoop2.7
    image: sparksubmit:2.4.0-hadoop2.7
    volumes:
      - .:/app/
    container_name: spark-submit
  mongod:
    depends_on: 
      - kafka-broker
    image: mongo:4.4
    container_name: mongod
    ports:
      - "27017:27017"
    volumes:
      # - ".:/data:rw"
      - .:/app/
    networks:
      - net
  dockerflask:
    depends_on: 
      - mongod
    image: dockerflask
    container_name: dockerflask
    ports:
      - "5000:5000"
    volumes:
      - ".:/app"
    working_dir: /app/practica_big_data_2019/resources/web
    command: python3 predict_flask.py
networks: 
  net:
    ipam:
      config:
        - subnet: 172.0.0.0/24
          aux_addresses: 
            kafka-broker: 172.0.0.2
            mongod: 172.0.0.3
    driver: bridge